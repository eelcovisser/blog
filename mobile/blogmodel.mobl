module blogmodel

entity Post {
  id           : String
  number       : Num
  key          : String // symbolic identity
  urlTitle     : String 
  title        : String (searchable)
  description  : String (searchable)
  content      : String (searchable)
  extended     : String (searchable) 
  contentHTML  : String 
  extendedHTML : String 
  created      : DateTime 
  modified     : DateTime  
}

service Blog {
  resource recentposts(): JSON {
    uri = "/blog/apirecentposts"
    //mapper = postsMapper
  }
}

function postsMapper(objs : JSON) : Collection<Post> {
  var posts : Collection<Post> = Collection<Post>();
  foreach(obj in objs) {    
    posts.add(updatePost(obj));
  }
  return posts;
}

function updatePost(obj: JSON): Post {
  var post = Post.findBy("id", obj.id); 
  if(!post) {
    post = Post.fromSelectJSON(obj);
  } else {
    post.number = obj.number;
    post.key = obj.key;
    post.urlTitle = obj.urlTitle;
    post.title = obj.title;
    post.description = obj.description;
    post.content = obj.content;
    post.extended = obj.extended;
    post.contentHTML = obj.contentHTML;
    post.extendedHTML = obj.extendedHTML;
    post.created = obj.created;
    post.modified = obj.modified;
  }
  return post;
}
